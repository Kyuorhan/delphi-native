unit Model.Formularios;

interface

uses
 Vcl.Forms,
 Interfaces.Formularios,
 View.Utilitarios.Cadastros.Usuarios,
 View.Compras.Cadastros.Produtos,
 View.Vendas.Cadastros.Clientes;
  type
    TFormulario = class(TInterfacedObject, iFormularios)
      private
      public
      constructor create;
      destructor destroy; override;
      class function New : iFormularios;
        function CadastroProdutos(Owner : TForm) : TFrmCadProdutos;
        function CadastroClientes(Owner : TForm) : TFrmCadClientes;
        function CadastroBanco(Owner : TForm) : TFrmCadBancos;
        function CadastroFuncionarios(Owner : TForm) : TFrmCadFuncionarios;
        function CadastroUsuarios(Owner : TForm) : TFrmCadUsuarios;
    end;

implementation

{ tFormulario }

function TFormulario.CadastroClientes(Owner: TForm): TFrmCadClientes;
begin
  FrmCadClientes := TFrmCadClientes.Create(Owner);
  Result := FrmCadClientes;
end;

function TFormulario.CadastroFuncionarios(Owner: TForm): TFrmCadFuncionarios;
begin
  FrmCadFuncionarios := TFrmCadFuncionarios.Create(Owner);
  Result := FrmCadFuncionarios;
end;

function tFormulario.CadastroProdutos(Owner: TForm): TFrmCadProdutos;
begin
  FrmCadProdutos := TFrmCadProdutos.Create(Owner);
  Result := FrmCadProdutos;
end;

function TFormulario.CadastroUsuarios(Owner: TForm): TFrmCadUsuarios;
begin
  FrmCadUsuarios := TFrmCadUsuarios.Create(Owner);
  Result := FrmCadUsuarios;
end;

function TFormulario.CadastroBanco(Owner: TForm): TFrmCadBancos;
begin
  FrmCadBancos := TFrmCadBancos.Create(Owner);
  Result := FrmCadBancos;
end;

constructor tFormulario.create;
begin

end;

destructor tFormulario.destroy;
begin

  inherited;
end;

class function tFormulario.New: iFormularios;
begin
  Result := Self.create;
end;

end.
